<?php

namespace Hyper\Domain\Item;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\ExclusionPolicy;
use JMS\Serializer\Annotation\Expose;

/**
 * Item
 *
 * @ORM\Table(name="items")
 * @ORM\Entity(repositoryClass="Hyper\DomainBundle\Repository\DTItemRepository")
 * @ExclusionPolicy("all")
 */
class Item
{
    /**
     * @var string
     * @ORM\Column(name="id", type="string")
     * @ORM\Id
     * @Expose
     */
    private $id;


    /**
     * @ORM\ManyToOne(targetEntity="Hyper\Domain\Application\Application", fetch="EXTRA_LAZY", inversedBy="items")
     * @ORM\JoinColumn()
     * @Expose
     */
    private $application;


    /**
     * @var string
     *
     * @ORM\Column(name="code", type="string")
     * @Expose
     */
    private $code;


    /**
     * @var float
     *
     * @ORM\Column(name="price", type="float", options={"unsigned"=true})
     * @Expose
     */
     
    private $price;

    /**
     * @var string
     *
     * @ORM\Column(name="currency", type="string")
     * @Expose
     */
     
    private $currency;
    
    /**
     * @var string
     *
     * @ORM\Column(name="metadata", type="string")
     * @Expose
     */
    private $metadata;
    
    /**
     * @var integer
     *
     * @ORM\Column(name="created", type="integer")
     * @Expose
     */
    private $created;    
    
    public function __construct()
    {
        $this->id = uniqid('',true);
        $this->created = time();
    }
    
}
