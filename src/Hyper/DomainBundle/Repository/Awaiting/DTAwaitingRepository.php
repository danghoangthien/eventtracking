<?php

namespace Hyper\DomainBundle\Repository\Awaiting;

use Doctrine\ORM\EntityRepository;
use Hyper\Domain\Awaiting_S3log\AwaitingRepository;
use Hyper\Domain\Awaiting_S3log\Awaiting;

/**
 * AwaitingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DTAwaitingRepository extends EntityRepository implements AwaitingRepository
{
    public function save(Awaiting $awaiting)
    {
        $this->_em->persist($awaiting);
    }
    
    public function completeTransaction()
    {
        $this->_em->flush();
    }
    
    public function getResultAndCount($page, $rpp)
    {
        $countQuery = $this->createQueryBuilder('aw')->select('count(aw.id)')->getQuery();
        $totalRows = $countQuery->getSingleScalarResult();

        $query = $this->createQueryBuilder('aw')->select('an')->orderBy('aw.created', 'DESC')->getQuery();
        $offset = $rpp*($page-1);
        $rows = $query->setFirstResult($offset)->setMaxResults($rpp)->getResult(\Doctrine\ORM\Query::HYDRATE_OBJECT);
        return array(
            'rows' => $rows,
            'total' => $totalRows
        );
    }
    
    public function findbyCriteria($field, $value)
    {
        $record = $this->findOneBy(array($field => $value));
        return $record;
    }
}