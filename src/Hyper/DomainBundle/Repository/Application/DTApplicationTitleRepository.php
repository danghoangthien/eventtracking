<?php

namespace Hyper\DomainBundle\Repository\Application;

use Doctrine\ORM\EntityRepository;

use Hyper\Domain\Application\ApplicationTitleRepository;


/**
 * DTApplicationTitleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DTApplicationTitleRepository extends EntityRepository implements ApplicationTitleRepository
{
    public function getPaginateData(
        $pageNumber,
        $perpageNumber = 10,
        $searchterm = '',
        $sort = '',
        $direction = 'ASC'
    ) {
        $offset = $perpageNumber * ($pageNumber - 1);
        $qbTotal = $this->createQueryBuilder('at')
                        ->select('count(at.id)');
        $qb = $this->createQueryBuilder('at')
                    ->select('at')
                    ->setFirstResult($offset)
                    ->setMaxResults($perpageNumber);
        if ($sort) {
            $qb->orderBy($sort, strtoupper($direction));
        }
        $qb->addOrderBy('at.id', 'DESC');

        $rows = $qb->getQuery()
                    //->getSQL();
                    ->getArrayResult();
        //echo $rows;exit;

        $totalRows =  $qbTotal->getQuery()->getSingleScalarResult();

        return array(
            'rows' => $rows,
            'total' => $totalRows
        );
    }

    public function getS3FolderByAppIds($listAppId)
    {
        if (!$listAppId) {
            return;
        }
        if (is_array($listAppId)) {
            $listAppId = implode("','", $listAppId);
        }
        $query = "SELECT s3_folder FROM applications_title
            WHERE id IN (SELECT app_title_id FROM applications_platform WHERE app_id IN ('$listAppId'))";
        $stmt = $this->_em->getConnection()->prepare($query);
        $stmt->execute();

        return $statement->fetchAll(\PDO::FETCH_COLUMN);
    }
}